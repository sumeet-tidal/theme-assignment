{%- doc -%}
  Renders a quick add component.

  @param {object} product - The product object
  @param {string} section_id - The section ID
  @param {object} [block] - The block object
{%- enddoc -%}

{% liquid
  assign product_form_id = 'QuickAdd-ProductForm-' | append: product.id | append: '-' | append: block.id
  assign add_to_cart_text = 'actions.add' | t
  assign placement = settings.quick_add_placement | default: 'bottom-right'

  # Logic to determine which variant to use (matching swatch selection logic from product-card)
  assign variant_to_use = product.selected_or_first_available_variant
  assign combined_listing_count = product.options_with_values | map: 'values' | map: 'product_url' | compact | size

  unless combined_listing_count > 0
    assign first_image = product.media.first
    assign variant_images = product.images | where: 'attached_to_variant?', true
    # Get swatchable options (options that have swatch values)
    assign swatch_variant_picker = null
    for option in product.options_with_values
      assign swatch_count = option.values | map: 'swatch' | compact | size
      if swatch_count > 0
        assign swatch_variant_picker = option
        break
      endif
    endfor

    if swatch_variant_picker
      assign swatch_count = swatch_variant_picker.values | map: 'swatch' | compact | size

      if swatch_count == 1
        # Single swatch: use that variant
        assign variant_to_use = swatch_variant_picker.values.first.variant
      elsif swatch_count > 1
        if first_image and variant_images contains first_image
          # First image is a variant image - find which variant it belongs to
          for option_value in swatch_variant_picker.values
            if option_value.variant.featured_media.id == first_image.id
              assign variant_to_use = option_value.variant
              break
            endif
          endfor
        elsif variant_images.size == 0
          # No variants have images - use first swatch variant
          assign variant_to_use = swatch_variant_picker.values.first.variant
        endif
        # else: First image is NOT a variant image - keep default (selected_or_first_available_variant)
      endif
    endif
  endunless

  if variant_to_use.available
    assign can_add_to_cart = true
  else
    assign can_add_to_cart = false
  endif
%}

<quick-add-component
  class="quick-add color-{{ settings.quick_add_color_scheme }} quick-add--{{ placement }}"
  ref="quickAdd"
  data-product-title="{{ product.title }}"
>
  <product-form-component
    data-section-id="{{ section_id }}"
    data-product-id="{{ product.id }}"
    on:submit="/handleSubmit"
    class="
      quick-add__product-form-component
      {% if product.options.size == 1 %} quick-add__product-form-component--single-option {% else %} quick-add__product-form-component--multi-option {% endif %}
      {% if product.variants.size == 1 %} quick-add__product-form-component--single-variant {% else %} quick-add__product-form-component--multi-variant {% endif %}
    "
  >
    <div
      class="visually-hidden"
      aria-live="assertive"
      role="status"
      aria-atomic="true"
      ref="liveRegion"
    ></div>
    {%- form 'product', product, id: product_form_id, novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
      <input
        type="hidden"
        name="id"
        ref="variantId"
        value="{{ variant_to_use.id }}"
        {% if variant_to_use.available == false %}
          disabled
        {% endif %}
      >
      <input
        type="hidden"
        name="quantity"
        value="{% if variant_to_use.quantity_rule.min %}{{ variant_to_use.quantity_rule.min }}{% else %}1{% endif %}"
      >
      {% comment %} If there is one variant option but it's swatches or if it's a single variant product, then use add to cart button {% endcomment %}
      {%- if product.variants.size == 1 or product.options.size == 1 -%}
        {% render 'add-to-cart-button',
          add_to_cart_text: add_to_cart_text,
          class: 'button quick-add__button quick-add__button--add',
          can_add_to_cart: can_add_to_cart,
          icon_only_on_mobile: true,
          product: product
        %}
      {%- endif -%}
      {%- if product.variants.size > 1 -%}
        <button
          class="button quick-add__button quick-add__button--choose"
          {% comment %} type="submit" is the default, so we explicitly set it to "button" to prevent the ProductFormComponent.handleSubmit from being triggered {% endcomment %}
          type="button"
          name="add"
          on:click="quick-add-component/handleClick"
        >
          <span
            class="add-to-cart-text"
          >
            <span
              class="svg-wrapper add-to-cart-icon"
            >
              {{- 'icon-add-to-cart.svg' | inline_asset_content -}}
            </span>
            <span class="add-to-cart-text__content is-visually-hidden-mobile">
              {{ add_to_cart_text }}
            </span>
          </span>
        </button>
      {%- endif -%}
    {%- endform -%}
  </product-form-component>
</quick-add-component>

<style>
  .quick-add-modal__content .view-product-title a {

  font-size: {{ settings.title_desktop_font_size | default: 1.5 }}rem;
}

.quick-add-modal__content [ref="priceContainer"] .price {
  font-size: {{ settings.price_desktop_font_size }}rem;
}

.quick-add-modal__content .variant-picker__form fieldset legend {
 font-size: {{ settings.option_label_desktop_font_size }}rem;
}

@media screen and (max-width: 749px) {

  .quick-add-modal__content .product-header a:not(product-price *) {

  font-size: {{ settings.title_mobile_font_size | default: 1.5 }}rem;
}

.quick-add-modal__content [ref="priceContainer"] .price {
  font-size: {{ settings.price_mobile_font_size }}rem;
}

.quick-add-modal__content .variant-picker__form fieldset legend {
 font-size: {{ settings.option_label_mobile_font_size }}rem;
}

}
</style>

{% stylesheet %}
  /* Quick Add */
  .quick-add {
      position: absolute;
      z-index: 2;
      transition: opacity 0.2s ease;
  }
  .svg-wrapper {
    display: block ruby;
  }

  .quick-add--top-left {
    top: 0.5rem;
    left: 0.5rem;
  }

  .quick-add--top-right {
    top: 0.5rem;
    right: 0.5rem;
  }

  .quick-add--bottom-left {
    bottom: 0.5rem;
    left: 0.5rem;
  }

  .quick-add--bottom-right {
    bottom: 0.5rem;
    right: 0.5rem;
  }

  .quick-add--center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @media screen and (max-width: 749px) {
    .quick-add--center {
      top: auto;
      bottom: 0.5rem;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  @container (max-width: 70px) {
  .card-gallery:hover .quick-add__button {
    display: block;
    padding: 5px 18px;
  }
}

  .quick-add {
    opacity: 0.8;
    transition: opacity 0.2s ease, transform 0.2s ease;
  }

  .card-gallery:hover .quick-add {
    opacity: 1;
    transform: scale(1.05);
  }

  .card-gallery:not(:hover) .quick-add {
    opacity: 0;
  }

  .card-gallery:hover .quick-add {
    opacity: 1;
  }

  .quick-add--top-left {
    z-index: 1;
  }

  .product-badges--top-left + .quick-add--top-left {
    top: 3rem;
  }

  .product-badges--top-right + .quick-add--top-right {
    top: 3rem;
  }

  .quick-add .variant-option__button-label input[data-option-available='false'] {
    cursor: not-allowed;
  }

  .quick-add[class*='color-scheme-'] {
    background-color: transparent;
  }

  .quick-add__button {
    display: grid;
    padding: var(--padding-xs);
    align-items: center;
    background-color: var(--color-background);
    color: var(--color-foreground);
    border-color: transparent;
    box-shadow: var(--shadow-popover);
    pointer-events: all;
    position: relative;
    overflow: hidden;
    border-radius: 100px;

    @media screen and (min-width: 750px) {
      display: none;
      padding: var(--padding-xs) var(--padding-sm);
    }

    .quick-add[stay-visible] & {
      display: grid;
    }
  }

  .quick-add__button .add-to-cart-text {
    gap: 0;
    line-height: 1;
    grid-row: 1 / span 1;
    grid-column: 1 / span 1;
    animation: none;

    @media screen and (min-width: 750px) {
      /* offset button padding to show a round button in a collapsed state */
      margin-inline: calc(var(--padding-sm) * -1);
      padding-inline: var(--padding-xs);
    }
  }

  .quick-add__button .add-to-cart-text--added {
    position: relative;
    grid-row: 1 / span 1;
    grid-column: 1 / span 1;
    justify-self: end;
    line-height: 1;

    @media screen and (min-width: 750px) {
      width: 0;
    }
  }

  .quick-add__button .add-to-cart-text__content {
    width: 0;
    opacity: 1;
    transform: translateX(1em);
    transition: width var(--animation-speed) ease-in-out, opacity var(--animation-speed) ease-in-out,
      transform var(--animation-speed) ease-in-out;
    interpolate-size: allow-keywords;
    will-change: width, opacity, transform;
  }

  @container (min-width: 99px) {
    .quick-add[stay-visible] .add-to-cart-text,
    .quick-add__button:is(:focus, :hover) .add-to-cart-text {
      gap: var(--gap-2xs);

      @media screen and (min-width: 750px) {
        /* offset button padding to show a round button in a collapsed state */
        margin-inline: 0;
        padding-inline: 0;
      }
    }

    .quick-add[stay-visible] .add-to-cart-text__content,
    .quick-add__button:is(:focus, :hover) .add-to-cart-text__content {
      width: fit-content;
      opacity: 1;
      transform: translateX(0);
    }
  }

  .quick-add__button.atc-added .add-to-cart-text {
    opacity: 0;
  }

  .quick-add__button.atc-added .add-to-cart-text--added {
    opacity: 1;
    width: auto;

    @supports (width: calc-size(auto, size)) {
      width: calc-size(auto, size);
    }
  }

  .quick-add__button.atc-added .add-to-cart-text {
    animation-name: atc-fade-out;
  }

  .quick-add__button.atc-added .add-to-cart-text--added {
    animation-name: atc-fade-in;
  }

  .quick-add__product-form-component {
    height: 100%;
  }

  .quick-add__product-form-component .shopify-product-form {
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
    container-type: inline-size;
    height: 100%;
  }

  .quick-add-modal .product-media {
    width: 100%;
    height: 100%;
  }

  .quick-add-modal deferred-media {
    display: none;
  }

  .quick-add-modal .media-gallery--carousel slideshow-component {
    --cursor: default;
  }

  @keyframes atc-fade-in {
    from {
      opacity: 0;
      transform: translateX(1em);
      position: absolute;
    }

    to {
      opacity: 1;
      transform: translateX(0);
      position: inherit;
    }
  }

  @keyframes atc-fade-out {
    from {
      opacity: 1;
      transform: translateX(0);
      position: inherit;
    }

    to {
      opacity: 0;
      transform: translateX(-1em);
      position: absolute;
    }
  }
{% endstylesheet %}
